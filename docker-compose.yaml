version: '3.8'

x-common-environment: &common-env
  LOG_LEVEL:    "${LOG_LEVEL:-INFO}"
  MONITOR_INTERVAL: "${MONITOR_INTERVAL:-5}"
  LOG_FILE_PATH:   "/app/logs/${SERVICE_NAME}.log"
  RABBITMQ_HOST:   "rabbitmq"
  RABBITMQ_USER:   "user"
  RABBITMQ_PASS:   "pass"
  VISUALIZE:       "${VISUALIZE:-true}"

services:
  rabbitmq:
    image: rabbitmq:3-management
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: pass

  ingestion-service:
    build:
      context: .
      dockerfile: ingestion-service/deploy/default/Dockerfile
    container_name: ingestion-service
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      <<: *common-env
      SERVICE_NAME: ingestion
      CAMERA_CONFIG_QUEUE:      camera_config_queue
      ROUTER_QUEUE:             router_queue
      RETRIEVE_QUEUE:           retrieve_queue
      EVIDENCE_RESPONSE_QUEUE:  evidence_response_queue
    volumes:
      - ./evidences:/app/evidences
      - ./logs/ingestion:/app/logs

  alerts-service:
    build:
      context: .
      dockerfile: alerts-service/deploy/__default__/Dockerfile
    container_name: alerts-service
    network_mode: "host"
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      <<: *common-env
      SERVICE_NAME: alerts
      # Sobrescreve para usar o broker na própria máquina (host network)
      RABBITMQ_HOST: "localhost"
      RABBITMQ_USER: "user"
      RABBITMQ_PASS: "pass"
      ROUTER_QUEUE:            router_queue
      CPU_TASKS_QUEUE:         frames_queue
      CPU_RESPONSE_QUEUE:      cpu_response_queue
      GPU_TASKS_QUEUE:         gpu_tasks_queue
      GPU_RESPONSE_QUEUE:      gpu_response_queue
      RETRIEVE_QUEUE:          retrieve_queue
      EVIDENCE_RESPONSE_QUEUE: evidence_response_queue
      WEBHOOK_URL:             http://192.168.15.12:8000/webhook
      DISPLAY:                 "${DISPLAY}"    # para X11
    volumes:
      - ./logs/alerts:/app/logs
      - /tmp/.X11-unix:/tmp/.X11-unix
  cpu-service:
    build:
      context: .
      dockerfile: cpu-service/deploy/moondream2/Dockerfile
    container_name: cpu-service
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      <<: *common-env
      SERVICE_NAME: cpu
      CPU_TASKS_QUEUE:    frames_queue
      CPU_RESPONSE_QUEUE: cpu_response_queue
    volumes:
      - ./logs/cpu:/app/logs

  gpu-service:
    build:
      context: .
      dockerfile: gpu-service/deploy/__default__/Dockerfile
    container_name: gpu-service
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      <<: *common-env
      SERVICE_NAME: gpu
      GPU_TASKS_QUEUE:    gpu_tasks_queue
      GPU_RESPONSE_QUEUE: gpu_response_queue
    volumes:
      - ./logs/gpu:/app/logs
